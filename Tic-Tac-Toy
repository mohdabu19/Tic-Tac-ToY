import random

# The game board
board = [' ' for _ in range(9)]

# Function to insert an 'X' or 'O' in the board
def insert_board(letter, pos):
    board[pos] = letter

# Function to check if the space is free
def space_free(pos):
    return board[pos] == ' '

# Function to print the board
def print_board(board):
    print(' ' + board[0] + ' | ' + board[1] + ' | ' + board[2])
    print('-----------')
    print(' ' + board[3] + ' | ' + board[4] + ' | ' + board[5])
    print('-----------')
    print(' ' + board[6] + ' | ' + board[7] + ' | ' + board[8])

# Function to check if the board is full
def is_board_full(board):
    return board.count(' ') == 0

# Function to check for a win
def is_winner(bo, le):
    return ((bo[0] == le and bo[1] == le and bo[2] == le) or
            (bo[3] == le and bo[4] == le and bo[5] == le) or
            (bo[6] == le and bo[7] == le and bo[8] == le) or
            (bo[0] == le and bo[3] == le and bo[6] == le) or
            (bo[1] == le and bo[4] == le and bo[7] == le) or
            (bo[2] == le and bo[5] == le and bo[8] == le) or
            (bo[0] == le and bo[4] == le and bo[8] == le) or
            (bo[2] == le and bo[4] == le and bo[6] == le))

# Function to implement the AI
def comp_move():
    possible_moves = [x for x, letter in enumerate(board) if letter == ' ' and x != 0]
    move = 0

    for let in ['O', 'X']:
        for i in possible_moves:
            board_copy = board[:]
            board_copy[i] = let
            if is_winner(board_copy, let):
                move = i
                return move

    corners_open = []
    for i in possible_moves:
        if i in [0, 2, 6, 8]:
            corners_open.append(i)
    if len(corners_open) > 0:
        move = select_random(corners_open)
        return move

    if 4 in possible_moves:
        move = 4
        return move

    edges_open = []
    for i in possible_moves:
        if i in [1, 3, 5, 7]:
            edges_open.append(i)
    if len(edges_open) > 0:
        move = select_random(edges_open)
        return move

# Function to select a random move
def select_random(li):
    import random
    ln = len(li)
    r = random.randrange(0, ln)
    return li[r]

# Main game loop
def play_game():
    print('Welcome to Tic Tac Toe!')
    print_board(board)

    while not(is_board_full(board)):
        if not(is_winner(board, 'O')):
            player_move()
            print_board(board)
        else:
            print('Sorry, O\'s won this time!')
            break

        if not(is_winner(board, 'X')):
            move = comp_move()
            if move == 0:
                print(' ')
            else:
                insert_board('X', move)
                print('Computer placed an \'X\' in position', move , ':')
                print_board(board)
        else:
            print('X\'s won this time! Good Job!')
            break

    if is_board_full(board):
        print('Tie Game!')

# Function to handle player move
def player_move():
    run = True
    while run:
        move = input('Please select a position to place an \'O\' (1-9): ')
        try:
            move = int(move)
            if move > 0 and move < 10:
                if space_free(move - 1):
                    run = False
                    insert_board('O', move - 1)
                else:
                    print('Sorry, this space is occupied!')
            else:
                print('Please type a number within the range!')
        except:
            print('Please type a number!')

play_game()
